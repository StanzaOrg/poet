defpackage poet/dependency:
  import core
  import maybe-utils

public defstruct Dependency:
  name: String
  uri: String
  version?: Maybe<String>

public defn path (dep: Dependency) -> String:
  to-string $ ".poet/deps/%_" % [name(dep)]

public defn spec (dep: Dependency) -> String:
  to-string $ "%_|%_"
    % [name(dep), version?(dep) $> value-or{_, "latest"}]

public defn parse-dependency (name: String, locator: String) -> Maybe<Dependency>:
  val elements = to-tuple $ split(locator, "|")

  if length(elements) $> contains?{[1, 2], _}:
    val uri = elements[0]
    val version? = One(elements[1]) when length(elements) > 1 else None()
    One(Dependency(name, uri, version?))
  else:
    None()
