defpackage poet/dependency:
  import core
  import maybe-utils
  import poet/utils

public defstruct Dependency:
  name: String
  locator: String
  version: String

public defn path (dep: Dependency) -> String:
  to-string $ ".poet/deps/%_" % [name(dep)]

public defn spec (dep: Dependency) -> String:
  to-string $ "%_|%_" % [name(dep), version(dep)]

public defn ref (dep: Dependency) -> String:
  if version(dep) == "latest":
    "HEAD"
  else:
    version(dep)

public defn uri (dep: Dependency) -> String:
  full-url-from-locator(locator(dep))

public defn parse-dependency (name: String, locator: String) -> Maybe<Dependency>:
  val elements = to-tuple $ split(locator, "|")

  switch(length(elements)):
    2:
      val locator = elements[0]
      val version = elements[1]
      One(Dependency(name, locator, version))
    else:
      None()
